
# ==============================================
# CONFIGURACION DEL SERVICIO DE FIRMA TRIFASICA
# ==============================================

# Pueden utilizarse variables de entorno proporcionadas al servidor de
# aplicaciones como parte de los valores configurados. Para ello, se
# debera delimitar el nombre de la variable de entorno en cuestion con
# las particulas "${" y "}". Por ejemplo:
# docmanager.filesystem.indir=${repositorio_dir}/entrada

# Origenes permitidos
Access-Control-Allow-Origin=*


# Permite indicar si se debe usar el proveedor de firma XML de Apache. Esto
# puede ser util para evitar problemas de compatibilidad con bibliotecas de
# procesado de XML que puedan encontrarse en el classpath del servidor de
# aplicaciones. Este tipo de bibliotecas pueden interferir con las que incluye
# el propio Oracle Java e impedir realizar firmas XAdES. Ejemplos de
# bibliotecas que provocan estos errores son XERCES/XALAN.
# El uso del proveedor de firma XML de Apache se realiza por defecto, por lo
# que al indicar el valor "false" se utilizara el proveedor de firma XML de
# Java, mientras que cualquier otro valor hara que se use el de Apache.
# No se garantiza la compatibilidad con todas las versiones de XERCES/XALAN.
# === IMPORTANTE: Para la compatibilidad con certificados de curva eliptica, es
# obligatorio que se utilice el proveedor de firma de Apache o una version de
# Java que incluya la version del proveedor con la declaracion del KeyValue
# corregida (Aun no disponible a fecha 24/06/2024).
# Valor por defecto: true
xml.provider.apache=true


# Clase del gestor de documentos a utilizar (debe implementar DocumentManager)

#  - Los datos se reciben por parametro y se devuelve la firma
document.manager=es.gob.afirma.triphase.server.document.SelfishDocumentManager

#  - Se recibe el nombre del fichero por parametro y se devuelve el nombre de
# fichero en el que almacena la firma 
#document.manager=es.gob.afirma.triphase.server.document.FileSystemDocumentManager

#  - Emula el comportamiento del SignSaver del antiguo mecanismo de firma de lotes
#document.manager=es.gob.afirma.triphase.server.document.LegacyBatchDocumentManager

# Cadena en base a la cual se verificara la integridad de la prefirma y el
# certificado entre las operaciones de prefirma y postfirma. Solo se realizara
# la verificacion cuando se configure una clave. Puede ser cualquier, aunque en
# los despliegues en alta disponibilidad del servicio trifasico, debe configurarse
# la misma clave en todos los nodos.     
verification.key=

# Indica si debe usarse la cache (true) o no (false). La cache se utiliza para
# almacenar temporalmente los datos que se prefirman para reutilizarlos en la
# postfirma y asi evitar que de tengan que volver a descargar. No se aconseja su
# uso cuando el configura el gestor de documentos "SelfishDocumentManager".
cacheEnabled=false

# Clase de implementacion de cache a utilizar (debe implementar DocumentCacheManager)
#  - Guardado temporal en disco:
document.cache.manager=es.gob.afirma.triphase.server.cache.FileSystemCacheManager

# ================================================
# === Configuracion de seguridad
# ================================================

# PDF Shadow Attack
# ------------------------------------------------
# Existe una vulnerabilidad en el formato PDF que puede hacer que al crear una
# nueva revision de un documento firmado con PAdES se modifique su apariencia
# sin invalidar sus firmas. Esto no afecta a la validez del documento ya que es
# posible comprobar correctamente el contenido que se firmo, pero un usuario que
# no lo compruebe expresamente podria creer a simple vista que se firmo algo
# distinto a lo que realmente se firmo. Este tipo de ataques se conocen como
# PDF Shadow Attack y su comprobacion es computacionalmente costosa ya que debe
# revisarse pagina a pagina. Para limitar la carga en el servidor se permite
# restringir el numero maximo de paginas sobre las que se realizara la
# comprobacion. La comprobacion solo se realizar cuando lo solicite la
# aplicacion cliente y esta puede indicar un numero de paginas distinto sobre
# el que realizar la comprobacion, por lo que solo se comprobara el menor
# numero de paginas indicadas por cliente o servidor.  

# Numero maximo de paginas sobre las que comprobar el PDF Shadow Attack.
# Se puede omitir la comprobacion indicando "0" paginas o permitir que se
# haga sobre todo el documento indicando el valor "all". Por defecto, 10.
maxPagesToCheckShadowAttack=10
# ================================================


# ================================================
# === Configuracion de las implementaciones de cache
# ================================================

# Configuracion de la clase FileSystemCacheManager
# ------------------------------------------------
# Directorio para el guardado de los ficheros.
cache.tmpDir=C:/pruebas
# Tiempo de caducidad de los mensajes. Por defecto: 60000 (1 minuto)
cache.expTime=60000
# Indica el numero maximo de usos de la cache para iniciar la limpieza de la misma
cache.maxUseToCleaning=300
# ================================================


# ================================================
# === Configuracion de la firma de lotes (Compatible con Autofirma 1.8 y superiores y clientes móviles)
# ================================================
# Directorio para el guardado de temporales. Por defecto, el directorio
# temporal del usuario. Se recomienda su configuracion para evitar
# problemas con otras aplicaciones al aplicar la politica de limpieza de
# temporales.
tmpdir=C:/pruebas/temp_lotes

# Operacion concurrente (true) o en serie (false)
concurrent.enable=false

# En caso de haberse configurado el parametro "concurrent.enable" a true,
# segundos que debera durar como maximo cada fase de una operacion de firma.
# Si se excediese este tiempo, se detendria y se consideraria que se produjo
# un error.
concurrent.timeout=30

# En caso de haberse configurado el parametro "concurrent.enable" a true,
# el numero maximo de firmas procesadas concurrentemente
concurrent.maxsigns=10

# Numero maximo de documentos por lote. El valor 0 indica que no hay limite.
batch.maxDocuments=0

# Limite del tamano del JSON de definicion de lote en bytes. El valor 0 indica
# que no hay limite.
batch.maxSize=0

# Limite del tamano de cada referencia de la peticion en bytes. Esta propiedad
# se usara ante todo cuando las referencias sean los propios datos a firmar (uso
# del SelfishDocumentManager) o cuando precisamente se quiere que no se envien
# los datos de esta manera. El valor 0 indica que no hay limite. 
batch.maxReferenceSize=0
# ================================================


# ================================================
# === Configuracion de los DocumentManager
# ================================================

# Configuracion del FileSystemDocumentManager (si se ha configurado en "document.manager")
# -------------------------------------------
# Directorio de lectura de los documentos
docmanager.filesystem.indir=C:/Users/carlos.gamuci/Desktop/Entrada
# Directorio de guardado de las firmas
docmanager.filesystem.outdir=C:/Users/carlos.gamuci/Desktop/Salida/tri
# Indica si sobreescribir los ficheros de firma con el mismo nombre
docmanager.filesystem.overwrite=true
# Indica el limite del tamaño del documento en bytes
docmanager.filesystem.maxDocSize=8000000
# -------------------------------------------

# Configuracion del LegacyBatchDocumentManager (si se ha configurado en "document.manager")
# -------------------------------------------
# Fuentes de datos permitidas, separadas por punto y coma (';'):
# - base64: El propio contenido codificado en base64.
# - URL: Direccion URL de origen. Admite asterisco como comodin y
#		 se soportan los esquemas "file:/", "http://", "https://" y "ftp://"
# Valor por defecto: base64;http://*;https://*
docmanager.legacybatch.allowedsources=base64;http://*;https://*

# Indica si se debe comprobar la confianza en el certificado SSL de las
# fuentes de datos en los que se encuentre el canal cifrado.
# Valor por defecto: true
docmanager.legacybatch.checksslcerts=true

# Limite del tamano del documento en bytes
docmanager.legacybatch.maxDocSize=8000000
# -------------------------------------------

